version: "3.9"

services:
  # 1. Rclone service to mount Google Drive
  rclone:
    image: rclone/rclone:latest
    container_name: rclone
    user: root # so we can write /etc/fuse.conf
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse:/dev/fuse
    security_opt:
      - apparmor:unconfined
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - RCLONE_CONFIG=/config/rclone/rclone.conf
    volumes:
      - ./rclone-config:/config/rclone:ro
      - ${MEDIA_MOUNT}:${MEDIA_MOUNT}:rshared
      - /mnt/rclone_cache:/mnt/rclone_cache
    entrypoint: ["/bin/sh", "-c"]
    command: |
      # 1) clean leftover files
      if [ -d "${MEDIA_MOUNT}" ] && [ "$(ls -A "${MEDIA_MOUNT}")" ]; then
        echo "[rclone] Cleaning stale files in ${MEDIA_MOUNT}"
        rm -rf "${MEDIA_MOUNT}"/*
      fi

      # 2) enable allow-other in FUSE
      printf 'user_allow_other\n' > /etc/fuse.conf

      # 3) mount the remote
      exec rclone mount ${RCLONE_REMOTE_NAME}:${RCLONE_REMOTE_PATH} "${MEDIA_MOUNT}" \
        --allow-other \
        --dir-cache-time 72h \
        --poll-interval 15s \
        --vfs-cache-mode full \
        --vfs-cache-max-size 100G \
        --vfs-cache-max-age 24h \
        --uid ${PUID} \
        --gid ${PGID}

    healthcheck:
      test: ["CMD-SHELL", "mountpoint -q ${MEDIA_MOUNT}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # 2. Plex Media Server
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: bridge
    restart: unless-stopped
    depends_on:
      - rclone
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=latest
      - PLEX_CLAIM=${PLEX_CLAIM}
    ports:
      - 32400:32400/tcp
      - 32400:32400/udp
      - 32469:32469/udp
      - 32469:32469/tcp
      - 5353:5353/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    volumes:
      - ${MEDIA_MOUNT}:/media:rslave
      - ./plex/config:/config
      - /transcode:/transcode

  # 3. Sonarr
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    depends_on:
      - rclone
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - 8989:8989
    volumes:
      - ./sonarr/config:/config
      - ${MEDIA_MOUNT}/TV:/media/tv
      - ${DOWNLOADS_DIR}:/downloads

  # 4. Radarr
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    depends_on:
      - rclone
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - 7878:7878
    volumes:
      - ./radarr/config:/config
      - ${MEDIA_MOUNT}/Movies:/media/movies
      - ${DOWNLOADS_DIR}:/downloads

  # 5. Prowlarr
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    depends_on:
      - rclone
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - 9696:9696
    volumes:
      - ./prowlarr/config:/config
      - ${DOWNLOADS_DIR}:/downloads

  # 6. qBittorrent
  qbittorrent:
    image: linuxserver/qbittorrent:4.5.5
    container_name: qbittorrent
    restart: unless-stopped
    depends_on:
      - rclone
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - WEBUI_USERNAME=admin
      - WEBUI_PASSWORD=adminadmin
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    volumes:
      - ./qbittorrent/config:/config
      - ${DOWNLOADS_DIR}:/downloads

  # 7. Nginx Proxy Manager
  nginx_proxy_manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginxproxymanager
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 81:81
    volumes:
      - ./npm/data:/data
      - ./npm/letsencrypt:/etc/letsencrypt

  # 8. Portainer
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/data:/data

  # 9. Auto-config (one-shot)
  autoconfig:
    image: alpine:latest
    container_name: autoconfig
    depends_on:
      - sonarr
      - radarr
      - qbittorrent
      - prowlarr
    volumes:
      - ./init:/init
      - ./.env:/.env:ro
    entrypoint: /bin/sh
    command: >
      -c "apk add --no-cache bash curl jq \
      && chmod +x /init/auto-config.sh \
      && /init/auto-config.sh"
    restart: "no"

networks:
  default:
    name: plexstack_default
